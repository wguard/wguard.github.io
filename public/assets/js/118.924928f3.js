(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{577:function(a,t,r){"use strict";r.r(t);var v=r(1),_=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"一-spring源码-spring底层核心原理解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-spring源码-spring底层核心原理解析"}},[a._v("#")]),a._v(" （一）Spring源码---Spring底层核心原理解析")]),a._v(" "),t("p",[a._v("对Spring的底层有一个整体的大致了解：")]),a._v(" "),t("ol",[t("li",[a._v("Bean的生命周期底层原理")]),a._v(" "),t("li",[a._v("依赖注入的底层原理")]),a._v(" "),t("li",[a._v("初始化底层原理")]),a._v(" "),t("li",[a._v("推断构造方法底层原理")]),a._v(" "),t("li",[a._v("AOP底层原理")]),a._v(" "),t("li",[a._v("Spring事务底层原理")])]),a._v(" "),t("h4",{attrs:{id:"spring-bean创建的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean创建的生命周期"}},[a._v("#")]),a._v(" Spring Bean创建的生命周期")]),a._v(" "),t("p",[a._v("Class类对象 —》无参构造方法—》对象—》依赖注入—》初始化前（@PostConstruct）—》初始化( InitializingBean )—》初始化后（AOP）—》代理对象—》Bean")]),a._v(" "),t("h4",{attrs:{id:"构造方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[a._v("#")]),a._v(" 构造方法")]),a._v(" "),t("ol",[t("li",[a._v("若存在一个无参构造方法，多个有参构造方法，使用无参构造方法")]),a._v(" "),t("li",[a._v("若存在两个有参构造的方法，Spring无法知道使用哪个构造方法，会报错")]),a._v(" "),t("li",[a._v("若只存在一个有参构造的方法，则使用当前构造方法")])]),a._v(" "),t("h4",{attrs:{id:"构造方法参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造方法参数"}},[a._v("#")]),a._v(" 构造方法参数")]),a._v(" "),t("p",[a._v("Spring会根据入参的类型和入参的名字去Spring中找Bean对象")]),a._v(" "),t("ol",[t("li",[a._v("先根据入参类型去查找，如果只存在一个则直接使用")]),a._v(" "),t("li",[a._v("如果根据类型找到多个，则根据名称查找")]),a._v(" "),t("li",[a._v("若不存在spring则直接会报错")])]),a._v(" "),t("h4",{attrs:{id:"aop流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aop流程"}},[a._v("#")]),a._v(" AOP流程")]),a._v(" "),t("p",[a._v("cglib：代理类继承原始类，重写原始类的方法,在方法中执行target.xxxx()方法")]),a._v(" "),t("p",[a._v("初始化后判断当前Bean是否进行需要AOP")]),a._v(" "),t("ol",[t("li",[a._v("找到所有的切面Bean")]),a._v(" "),t("li",[a._v("遍历每一个切面Bean的方法，查看当前方法是否与代理方法是否匹配，缓存map")])]),a._v(" "),t("h4",{attrs:{id:"事务处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务处理"}},[a._v("#")]),a._v(" 事务处理")]),a._v(" "),t("ol",[t("li",[a._v("判断当前是否存在@Transction")]),a._v(" "),t("li",[a._v("创建一个数据库连接（事务管理器 dataSource）")]),a._v(" "),t("li",[a._v("coon.autocommit  = false")])]),a._v(" "),t("h4",{attrs:{id:"spring底层推断构造方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring底层推断构造方法"}},[a._v("#")]),a._v(" Spring底层推断构造方法")])])}),[],!1,null,null,null);t.default=_.exports}}]);